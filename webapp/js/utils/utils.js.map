{"version":3,"names":[],"mappings":"","sources":["js/utils/utils.js"],"sourcesContent":["/**\n * Created by LHY on 16/7/25.\n */\n\n$(function(){\n    var app = window.app = window.app || {};\n    var utils = app.utils = app.utils || {};\n    /**\n     * 为起止时间输入框设置最大值 最小值 请在设置完输入框初始值后调用该方法 如果输入框初始值为空 则默认为当前日期\n     *\n     * @param startID\n     *            开始时间控件ID\n     * @param endID\n     *            结束时间控件ID\n     * @param maxRange\n     *            最大日期范围 默认无控制\n     * @param maxRangeUnit\n     *            最大日期范围的单位 Y:年 M:月 D:日 其他值默认为D 只有maxRange不为空时 该参数才有意义\n     */\n    utils.initMin_MaxDate = function(startID, endID, maxRange, maxRangeUnit) {\n        var startInput = $('#' + startID);\n        var endInput = $('#' + endID);\n        var methodObj = {\n            Y : {\n                set : 'setFullYear',\n                get : 'getFullYear'\n            },\n            M : {\n                set : 'setMonth',\n                get : 'getMonth'\n            },\n            D : {\n                set : 'setDate',\n                get : 'getDate'\n            }\n        };\n\n        //为开始时间输入框添加事件 设置最大 最小值\n        startInput.blur(setMinMax);\n        endInput.blur(setMinMax);\n\n        // 如果输入框不存在初始值 则设置初始值为当前日期\n        if (!startInput.val())\n            startInput.val(ACLIFE.formatDate());\n        if (!endInput.val())\n            endInput.val(ACLIFE.formatDate());\n        // 初始化输入框的最大最小值\n        setMinMax();\n\n        function setMinMax(e) {\n            //endInput.attr('min', startInput.val());\n            endInput.data('min', startInput.val());\n            //startInput.attr('max', endInput.val());\n            startInput.data('max', endInput.val());\n\n            // 如果包含输入区间 则进行更多控制\n            if (maxRange) {\n                var startDate = ACLIFE.strToDate(startInput.val());\n                var endDate = ACLIFE.strToDate(endInput.val());\n                if (!methodObj[maxRangeUnit]) maxRangeUnit = 'D';\n\n                var _set = methodObj[maxRangeUnit].set;\n                var _get = methodObj[maxRangeUnit].get;\n\n                var maxEndDate = new Date(startDate.getTime());\n                maxEndDate[_set](maxEndDate[_get]() + maxRange);\n                endInput.data('max', ACLIFE.formatDate(maxEndDate));\n                var minStartDate = new Date(endDate.getTime());\n                minStartDate[_set](minStartDate[_get]() - maxRange);\n                startInput.data('min', ACLIFE.formatDate(minStartDate));\n            }\n\n            if(e){\n                if($(this).attr('id') == startInput.attr('id')){\n                    // 判断输入的值是否符合要求\n                    check(endInput, 'min');\n                    check(endInput, 'max');\n                }else{\n                    check(startInput, 'min');\n                    check(startInput, 'max');\n                }\n            }else{\n                check(endInput, 'min');\n                check(endInput, 'max');\n                check(startInput, 'min');\n                check(startInput, 'max');\n            }\n        }\n\n        // 对输入的值进行校验 查看是否在区间中\n        function check(input, type) {\n            if (type == 'min') {\n                if (!input.val() || (input.data('min') && ACLIFE.strToDate(input.val()) < ACLIFE.strToDate(input.data('min'))) ) {\n                    input.val(input.data('min'));\n                }\n            } else {\n                if (!input.val() || input.data('max') && ACLIFE.strToDate(input.val()) > ACLIFE.strToDate(input.data('max'))) {\n                    input.val(input.data('max'));\n                }\n            }\n        }\n    };\n\n    /**\n     * 限制输入框输入的内容长度\n     */\n    utils.inputMaxLength = function(field, length) {\n        if (!length)\n            return;\n        field.keyup(function() {\n            // 过滤输入框长度\n            if (length && field.val().length > length) {\n                field.val(field.val().slice(0, length));\n            }\n        });\n    };\n\n    /**\n     * 发送邮件 调用系统内置邮件客户端发送邮件\n     * @param receiver 收件人\n     * @param subject 主题\n     * @param content 邮件内容\n     */\n    utils.sendMail = function(receiver,subject,content){\n        window.open('mailto:'+(receiver || '')+'?subject='+subject+'&body='+content,'_system');\n    };\n\n    /**\n     * 限制输入框只能输入数字\n     */\n    app.onlyNumber = function(field, length) {\n        field.keyup(function(event) {\n            // 过滤长度\n            if (length && field.val().length > length) {\n                field.val(field.val().slice(0, length));\n            }\n            // 过滤非数字\n            field.val(field.val().replace(/[^0-9]/g, ''));\n        });\n    };\n\n    /**\n     * 将数字字符串添加千粉符\n     */\n    utils.splitNumber = function(str){\n        str = str ||'';\n\n        var result = '';\n        var lastIndex = str.lastIndexOf('.');\n        if(lastIndex != -1){\n            result = str.slice(lastIndex);\n            str = str.slice(0,lastIndex);\n        }\n\n        while(str.length > 3){\n            result = ','+str.slice(-3)+result;\n            str = str.slice(0,-3);\n        }\n        return str + result;\n    };\n\n    /**\n     * 将数字转换为中文\n     * @param n\n     * @returns {string}\n     */\n    utils.toChineseNum = function(n){\n        var chineseNum = '';\n        var shu = ['零','一','二','三','四','五','六','七','八','九'];\n        var danwei = ['','十','百','千','万','十','百','千','亿'];\n        var lastNotZeroFlag = false;//上一个数不是零为 true\n        var ys = 0;\n        for(var i=0;n>0;i++){\n            ys = n%10;\n            n = parseInt(n/10);\n            if(ys == 0){\n                if(lastNotZeroFlag){\n                    chineseNum = shu[ys] + chineseNum;\n                    lastNotZeroFlag = false;\n                }\n            }else{\n                chineseNum = shu[ys] + danwei[i] + chineseNum;\n                lastNotZeroFlag = true;\n            }\n        }\n\n        if(chineseNum.indexOf('一十') == 0){\n            chineseNum = chineseNum.substring(1,chineseNum.length);\n        }\n\n        return chineseNum;\n    }\n\n    /**\n     * 对日期进行加减操作 该方法不会修改传入的Date对象\n     * @param date 如果为null 则表示为当前日期\n     * @param unit 单位 y:年 M:月 d:日 h:小时 m:分钟 s:秒\n     * @param value 增加的数值 可以为负数\n     * @return 返回值为修改后的新的Date对象\n     */\n    utils.addDate = function(date,unit,value){\n        date = date ? date instanceof Date ? new Date(date.getTime()) : new Date(date) : new Date();\n        var units = {\n            y:'FullYear',\n            M:'Month',\n            d:'Date',\n            h:'Hours',\n            m:'Minutes',\n            s:'Seconds'\n        }\n\n        try{\n            if(units[unit]){\n                date['set'+units[unit]](date['get'+units[unit]]() + parseInt(value));\n            }\n        }catch (e){\n            console.error(e);\n        }\n\n        return date;\n    }\n\n    /**\n     * 获取当前日期字符串\n     */\n    utils.getCurrDate = function(){\n        return this.getDateStr();\n    }\n\n    utils.getDateStr = function(date){\n        date = date ? date instanceof Date ? new Date(date.getTime()) : new Date(date) : new Date();\n        var year = date.getFullYear();\n        var day = date.getDate();\n        var month = date.getMonth() + 1;\n        day = day < 10 ? '0'+day : day;\n        month = month < 10 ? '0' + month : month;\n\n        return year + '-' + month + '-' + day;\n    }\n\n\n    /**\n     * 获取本周的所有日期\n     * @param date\n     */\n    utils.getWeekDates = function(date){\n        date = date ? date instanceof Date ? new Date(date.getTime()) : new Date(date) : new Date();\n        var day = date.getDay();\n        var week = [];\n        for(var i=1;i<=5;i++){\n            week.push(this.addDate(date,'d',i - day));\n        }\n        return week;\n    }\n\n    /**\n     * 判断是否为假日 目前为周六或周日\n     * @param date(可选) 毫秒数或Date 不传或传null为当前日期\n     */\n    utils.isHoliday = function(date){\n        date = date ? date instanceof Date ? new Date(date.getTime()) : new Date(date) : new Date();\n        var day = date.getDay();\n        return day === 6 || day === 7;\n    }\n\n    /**\n     * 获取随机字符串如果浏览器支持crypto.getRandomValues 则调用该方法 如果不支持则使用其他方法计算\n     * @returns {*}\n     */\n    utils.getRandomValue = function(){\n        if(window.Unint32Array && window.crypto && window.crypto.getRandomValue){\n            return crypto.getRandomValues(new Uint32Array(1))[0];\n        }else{\n            return Math.ceil (( (new Date().getTime() * 9301 + 49297) % 233280)/233280.0 * 10000);\n        }\n    }\n    /**\n     * 角度转换为弧度\n     * @param angle\n     */\n    utils.angleToRad = function(angle){\n        angle = angle || 0;\n        return 2 * Math.PI/360 * angle;\n    }\n\n    /**\n     * 根据角度计算余弦值\n     * @param angle\n     */\n    utils.cos = function(angle){\n        return Math.cos(utils.angleToRad(angle));\n    }\n\n    /**\n     * 根据角度计算正弦值\n     * @param angle\n     */\n    utils.sin = function(angle){\n        return Math.sin(utils.angleToRad(angle));\n    }\n});\n"],"file":"utils.js"}